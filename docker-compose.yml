version: '3.9'

services:
  chat-service:
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    container_name: chat-service
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - ecommerce-network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - ecommerce-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8002:8002"
    volumes:
      - ./order-service/datasets:/app/datasets
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - mock-api
    networks:
      - ecommerce-network

  mock-api:
    build:
      context: ./order-service
      dockerfile: Dockerfile  # Assuming your Dockerfile is in the order-service root
    command: ["uvicorn", "services.mock_api:app", "--host", "0.0.0.0", "--port", "4000"]
    ports:
      - "4000:4000"
    volumes:
      - ./order-service/datasets:/app/datasets  # Mount datasets folder if needed
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - ecommerce-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - order-service
      - chat-service
      - product-service
    networks:
      - ecommerce-network
networks:
  ecommerce-network:
    driver: bridge